/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/research": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Research Topic
         * @description Basic research with AI synthesis
         *
         *     - Searches 5 web sources
         *     - Returns 2-3 sentence summary
         *     - Provides 3 key insights
         */
        post: operations["research_topic_research_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/deep-research": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Deeper Research Topic
         * @description Two-layer research for better depth
         *
         *     - Layer 1: Initial search (6 sources)
         *     - AI identifies follow-up question
         *     - Layer 2: Follow-up search (4 sources)
         *     - Final synthesis with depth analysis
         */
        post: operations["deeper_research_topic_deep_research_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/multi-agent-research": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Anthropic Multiagent Research
         * @description Multi-agent research with parallel execution
         *
         *     - Lead agent decomposes query into 3 subtasks
         *     - 3 specialized subagents work in parallel
         *     - Each subagent searches 2 sources
         *     - Lead agent synthesizes all findings
         *     - Returns executive summary and integrated insights
         */
        post: operations["anthropic_multiagent_research_multi_agent_research_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** MultiAgentResearchResponse */
        MultiAgentResearchResponse: {
            /** Query */
            query: string;
            /** Subagents */
            subagents: number;
            /** Total Sources */
            total_sources: number;
            /** Synthesis */
            synthesis: string;
        };
        /** ResearchRequest */
        ResearchRequest: {
            /**
             * Query
             * @description Research query or question
             */
            query: string;
        };
        /** ResearchResponse */
        ResearchResponse: {
            /** Query */
            query: string;
            /** Sources */
            sources: number;
            /** Response */
            response: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    research_topic_research_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResearchRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResearchResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    deeper_research_topic_deep_research_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResearchRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResearchResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    anthropic_multiagent_research_multi_agent_research_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResearchRequest"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MultiAgentResearchResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
